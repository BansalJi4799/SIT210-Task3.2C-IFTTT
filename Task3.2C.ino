/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/c40dd0b3-9a75-4c59-b0b9-a012f4b9d051

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing
  String data;
  float intensity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <BH1750FVI.h>

BH1750FVI LightSensor(BH1750FVI::k_DevModeContLowRes);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  LightSensor.begin();
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  float val = LightSensor.GetLightIntensity();
  intensity = val;
  if (val > 300)
  {
    Serial.println("Sunlight Detected");
    data = "Sunlight Detected";
    intesity = val;
  }
  else
  {
    Serial.println("No Light!!");
    data = "No Light!!";
    intensity = val;
  }
  Serial.print("Intensity value: ");
  Serial.print(intensity);
  Serial.println(" ");
  delay(5000);

}



/*
  Since Intensity is READ_WRITE variable, onIntensityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onIntensityChange()  {
  // Add your code here to act upon Intensity change
}





/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/444bfd7d-f1f3-42f7-97c8-4f95a2f4a5cf 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String message;
  float light_intensity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include <BH1750FVI.h>

BH1750FVI LightSensor(BH1750FVI::k_DevModeContLowRes);
#include "thingProperties.h"
#include <Arduino.h>

// String present;
//BH1750FVI light(BH1750FVI::k_DevModeContLowRes);


void setup() {
  Serial.begin(9600);
    LightSensor.begin();
  
  delay(1500); 
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  float sunlight;
  sunlight= LightSensor.GetLightIntensity();
  Serial.println(sunlight);
  
  if(sunlight > 600)
  {
    message = "Sunlight is there. NO darkness";
    delay(1000);
  }
  if(sunlight < 600)
  {
    message = "There is no sunlight, Quite Dark outside";
    delay(1000);
  }

}

/*
  Since LightIntensity is READ_WRITE variable, onLightIntensityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLightIntensityChange()  {
  // Add your code here to act upon LightIntensity change
}
/*
  Since Present is READ_WRITE variable, onPresentChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onPresentChange()  {
  // Add your code here to act upon Present change
}

/*
  Since Message is READ_WRITE variable, onMessageChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMessageChange()  {
  // Add your code here to act upon Message change
}
